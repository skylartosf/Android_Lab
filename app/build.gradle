plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services' // Google services Gradle plugin
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
    namespace 'com.example.igwithfirebase'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.igwithfirebase"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "facebook_app_id", properties.getProperty("fb.app.id"))
        buildConfigField("String", "fb_login_protocol_scheme", properties.getProperty("fb.login.protocol.scheme"))
        buildConfigField("String", "facebook_client_token", properties.getProperty("fb.client.token"))

        buildConfigField("String", "twitter_consumer_key", properties.getProperty("twitter.consumer.key"))
        buildConfigField("String", "twitter_consumer_secret", properties.getProperty("twitter.consumer.secret"))
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    viewBinding {
        enabled = true
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    // Google Material Design
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:32.0.0')
    // When using the BoM, you don't specify versions in Firebase library dependencies

    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-storage-ktx'

    // Firebase 로그인을 관리하는 라이브러리(모듈)
    // 주 기능으로 AuthStateChangeListner, 이메일 로그인 기능, Credential(인증서)를 생성해 Firebase로 넘겨주는 기능을 가진다
    //implementation 'com.google.firebase:firebase-auth:21.1.0'

    // Google 소셜 로그인 지원
    // 구글 로그인을 관리하는 모듈, 인증이 성공할 경우 JWT(Json Web Token)을 발급해주는 기능을 가진다
    implementation 'com.google.android.gms:play-services-auth:20.5.0'

    // Facebook 소셜 로그인 지원
    // 페이스북 로그인을 관리하는 모듈, 인증이 성공할 경우 JWT를 넘겨준다
    //implementation 'com.facebook.android:facebook-login:latest.release'
    //implementation 'com.facebook.android:facebook-android-sdk:[4,5)'
    implementation 'com.facebook.android:facebook-android-sdk:[8,9)'

    // Twitter 라이브러리 - 필요 없음
    // 트위터 로그인을 관리하는 모듈, 인증이 성공할 경우 JWT를 넘겨준다
    //implementation 'com.twitter.sdk.android:twitter:3.1.1'

    // Coil : 코루틴으로 만들어진 Android 백엔드 이미지 로딩 라이브러리
    // https://coil-kt.github.io/coil/README-ko/
    implementation("io.coil-kt:coil:2.3.0")

    // Firebase 데이터베이스의 2가지 RealtimeDatabase와 Firestore, 중에 Firestore
    implementation 'com.google.firebase:firebase-firestore'

    // by viewmodels()
    implementation 'androidx.activity:activity-ktx:1.7.1'
    implementation 'androidx.fragment:fragment-ktx:1.5.7'

    // glide
    implementation 'com.github.bumptech.glide:glide:4.15.1'
}